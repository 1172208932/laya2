import Utils from "../utils/utils";
import MatchGradeService from "../common/MatchGradeService/MatchGradeService";

export default class CrossLinkControl extends PaoYa.Component {
    onAwake() {
        Laya.loader.load('gameConfig.json', Laya.Handler.create(this, (res) => {
            res.navigateToMiniProgramAppIdList ? this.appId = res.navigateToMiniProgramAppIdList : console.error('请在gameConfig中设置游戏白名单')
        }))
        this.gameType = this.owner.params.type;
        this.GET('game_whole_list', (res) => {
            this.processData(res)
        })
    }
    onClick(e) {
        if (e.target.name == 'again') {
            this.againHandler();
        }
    }
    processData(res) {
        this.shareInfo = JSON.parse(JSON.stringify(this.appId));
        this.spineInfo = [];
        for (let i = 0; i < 8; i++) {
            var rand = Math.floor(Math.random() * this.shareInfo.length);
            this.spineInfo.push(this.shareInfo.splice(rand, 1)[0]);
        }
        let list = []
        res.forEach(element => {
            for (let i = 0; i < 8; i++) {
                if (element.appId == this.spineInfo[i]) {
                    list.push({ name: element.name, icon: `https://res.xingqiu123.com/img/xcx/gameHall_2.0/home/game_icon_${element.id}.png`, id: element.id, appId: element.appId, image: element.qr_img })
                }
            }
        });
        this.owner.reloadData(list)
    }
    gameClick(data) {
        this.POST('point_log_record', { point_name: 1, point_extra: data.appId, point_type: 'crossLink' }, (res) => {
        })
        Utils.navigateToMiniProgram({
            appId: data.appId,
            images: [data.image],
            extraData: {
                jType: 'crossLink',
                fid: data.id
            }
        })
    }
    againHandler() {
        this.GET("update_chips", (data) => {
            this.owner.close()
            PaoYa.DataCenter.user.gold = data.pao_gold;
            if (this.gameType == PaoYa.GameEntryType.Match) {//重新走匹配
                let type = MatchGradeService.type;
                MatchGradeService.checkIfMatch(type);
            }
        })
    }
}